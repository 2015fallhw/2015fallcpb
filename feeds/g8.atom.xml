<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2015FALL CPB 作業</title><link href="http://coursemdetw.github.io/reveal/" rel="alternate"></link><link href="http://coursemdetw.github.io/reveal/feeds/g8.atom.xml" rel="self"></link><id>http://coursemdetw.github.io/reveal/</id><updated>2016-01-08T15:33:00+08:00</updated><entry><title>g8 w17-1</title><link href="http://coursemdetw.github.io/reveal/g8_w17-1.html" rel="alternate"></link><updated>2016-01-08T15:33:00+08:00</updated><author><name>40423241</name></author><id>tag:coursemdetw.github.io,2016-01-08:reveal/g8_w17-1.html</id><summary type="html">&lt;p&gt;g8 w17-1
&lt;font color=pink&gt;音浪太強，不晃，會掉到地上!!!&lt;/font&gt;
以下利用 Brython 在網頁寫 Python 繪圖&lt;/p&gt;
&lt;!-- 導入 brython.js --&gt;

&lt;script type="text/javascript" src="http://brython.info/src/brython_dist.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 brython() --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 browser 模組中的 document, 並設為 doc 變數
from browser import document as doc
# 導入數學模組
import math
# 產生各小球的亂數速度用
import random
# 導入 browser 中的計時器, 建立動畫用
import browser.timer

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")

# 取畫布的寬與高度
width = canvas.width
height = canvas.height

n = 30
# 已知數列內容個數, 先分別與 None 對應
x = [None]*n
y = [None]*n
vy = [None]*n
vx = [None]*n
# 重力加速度, Y 方向向下為正
g = 0.1
# 空氣的黏滯阻尼係數
cor = 0.7 
# 球的彈力係數
fr = 0.95
# 球的半徑
r = 10

for i in range(n):
    x[i] = 300
    y[i] = 100
    # random.random() 將會產生介於 0 與 1 的浮點亂數
    vx[i] = 2*(random.random()-.5)
    vy[i] = 2*(random.random()-.5)

# 更新第 i 球 Y 座標的運算邏輯
def updateY(i):
    if ((y[i]+r) &lt; height):
        #y = height
        vy[i] += g
    else:
        vy[i] = -vy[i]*cor
        vx[i] *= fr
    y[i] += vy[i]
    if ((y[i]+r) &gt; height):
        y[i] = height-r

# 更新第 i 球 X 座標的運算邏輯
def updateX(i):
    if ((x[i]+r) &gt;= width or (x[i]-r) &lt;= 0):
        vx[i] = -vx[i]*cor
    x[i] += vx[i]
    if ((x[i]+r) &gt; width):
        x[i] = width-r
    elif ((x[i]-r) &lt; 0):
        x[i] = r

# 畫圓函式
def circle(x,y,r):
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    ctx.fill()

# 寫字函式
def text(s):
    ctx.fillStyle = "#00008b"
    ctx.font = "30px sans-serif"
    ctx.textBaseline = "bottom"
    ctx.fillText(s,0,height)

# 每隔特定時間, 進行動畫繪製
def animate():
    # 刷新畫布
    ctx.clearRect(0, 0, width, height)
    # 逐一重新繪製小球
    ctx.fillStyle = "#FFFF00"
    for i in range(n):
        updateY(i)
        updateX(i)
        circle(x[i],y[i],r)

text("Touch Me")

# 畫布點擊後執行的函式
def on_canvas_click(ev):
    browser.timer.set_interval(animate,0)

# 只要使用者點擊在畫布上任何地方, 即執行 on_canvas_click 函式
canvas.bind('click', on_canvas_click, False)
&lt;/script&gt;</summary><category term="w14"></category></entry><entry><title>g8_w14_1</title><link href="http://coursemdetw.github.io/reveal/g8_w14_1.html" rel="alternate"></link><updated>2015-12-19T14:18:00+08:00</updated><author><name>40423241</name></author><id>tag:coursemdetw.github.io,2015-12-19:reveal/g8_w14_1.html</id><summary type="html">&lt;p&gt;以下利用 Brython 在網頁寫 Python 繪圖&lt;/p&gt;
&lt;!-- 導入 brython.js --&gt;

&lt;script type="text/javascript" src="js/Brython3.2.3-20151122-082712/brython.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 brython() --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea" width="300" height="200"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 doc
from browser import document as doc
from browser import console
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")

# 開始畫直線
ctx.beginPath()
ctx.lineWidth = 5
ctx.moveTo(0, 0)
ctx.lineTo(100, 100)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(100, 0)
ctx.lineTo(0, 100)
ctx.strokeStyle = "#0000ff"
ctx.stroke()

x = 100
y = 100

# 利用 browser 模組中的 console.log 將資料列印在 console 區, 可以用來確認程式中各變數的值, 用法等同 print
console.log("x 值為"+str(x)+", y 值為"+str(y))
&lt;/script&gt;</summary><category term="w14"></category><category term="brython"></category></entry><entry><title>g8 w14-2</title><link href="http://coursemdetw.github.io/reveal/g8_w14_2.html" rel="alternate"></link><updated>2015-12-18T15:33:00+08:00</updated><author><name>40423241</name></author><id>tag:coursemdetw.github.io,2015-12-18:reveal/g8_w14_2.html</id><summary type="html">&lt;p&gt;g8 w14-2&lt;/p&gt;
&lt;!-- 導入 brython.js --&gt;

&lt;script type="text/javascript" src="js/40423241-w14.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 brython() --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea" width="200" height="200"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 doc
from browser import document as doc
from browser import console
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")

# 開始畫直線
for i in range(11):
    ctx.beginPath()
    ctx.lineWidth = 5
    ctx.moveTo(0,0+i*20 )
    ctx.lineTo(200,0+i*20 )
    ctx.strokeStyle = "#0099FF"
    ctx.stroke()
for i in range(11):
    ctx.beginPath()
    ctx.lineWidth = 5
    ctx.moveTo(0+i*20, 0)
    ctx.lineTo(0+i*20, 200)
    ctx.strokeStyle = "#FF0320"
    ctx.stroke()


&lt;/script&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;</summary><category term="w14"></category></entry><entry><title>g8 w15-1</title><link href="http://coursemdetw.github.io/reveal/g8_w15_1.html" rel="alternate"></link><updated>2015-12-18T15:33:00+08:00</updated><author><name>40423241</name></author><id>tag:coursemdetw.github.io,2015-12-18:reveal/g8_w15_1.html</id><summary type="html">&lt;h1&gt;1. Python3 的近端程式開發系統如何建立? 如何啟動?&lt;/h1&gt;
&lt;h2&gt;安裝及啟動&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;從教學網站下載"Ana3_lite2.7"及"fix"&lt;/li&gt;
&lt;li&gt;將兩個檔案進行解壓縮&lt;/li&gt;
&lt;li&gt;先開啟"fix"料夾&lt;/li&gt;
&lt;li&gt;點選啟動"fix.bat"，畫面只會閃一下&lt;/li&gt;
&lt;li&gt;再開啟"Anaconday"資料夾&lt;/li&gt;
&lt;li&gt;點選"start.bat"&lt;/li&gt;
&lt;li&gt;成功開啟&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;修正fix&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;開啟教學網頁&lt;/li&gt;
&lt;li&gt;點選2015fall課程&lt;/li&gt;
&lt;li&gt;點選遠端(copy)下載fix&lt;/li&gt;
&lt;li&gt;將檔案解壓縮&lt;/li&gt;
&lt;li&gt;使用瀏覽器搜尋 leo editor github&lt;/li&gt;
&lt;li&gt;點選進入網頁&lt;/li&gt;
&lt;li&gt;點選leo-editor&lt;/li&gt;
&lt;li&gt;點選release&lt;/li&gt;
&lt;li&gt;點選broke-abbrev&lt;/li&gt;
&lt;li&gt;點選Source code(zip)&lt;/li&gt;
&lt;li&gt;將檔案移至fix資料夾&lt;/li&gt;
&lt;li&gt;到Ana3_lite2\data\SciTE&lt;/li&gt;
&lt;li&gt;開啟SciTe.exe &lt;/li&gt;
&lt;li&gt;使用此編輯器開啟fix.bat&lt;/li&gt;
&lt;li&gt;在最後增加一行指令
      指令為  copy leo-editor-broke-abbrev.zip C:\Ana3_2015\data\                            &lt;/li&gt;
&lt;li&gt;儲存檔案&lt;/li&gt;
&lt;li&gt;使用此編輯器開啟start.bat&lt;/li&gt;
&lt;li&gt;將原指令 (第35行) pip install http://140.130.17.17/public/leo-editor-master.zip         &lt;br /&gt;
     更改為 pip install leo-editor-broke-abbrev.zip&lt;/li&gt;
&lt;li&gt;儲存檔案&lt;/li&gt;
&lt;li&gt;點選開啟fix.bat&lt;/li&gt;
&lt;li&gt;點選開啟start.bat&lt;/li&gt;
&lt;li&gt;成功開啟~~                &lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;2. 目前已經熟悉的 Python3 指令及語法有哪些? 請舉例說明&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://imgur.com/FxIA2DT"&gt;&lt;img src="http://i.imgur.com/FxIA2DT.jpg" title="source: imgur.com" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;3.請利用流程圖, 簡要說明近端猜數字遊戲與猜顏色遊戲程式碼如何設計與運作&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://imgur.com/Vb0uBlB"&gt;&lt;img src="http://i.imgur.com/Vb0uBlB.jpg" title="source: imgur.com" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;40423241&lt;/h3&gt;
&lt;!-- 導入 brython.js --&gt;

&lt;script type="text/javascript" src="js/Brython3.2.3-20151122-082712/40423241.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 brython() --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea2" width="400" height="300"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 doc
from browser import document as doc
from browser import console
import math

# 準備繪圖畫布
canvas = doc["plotarea2"]
ctx = canvas.getContext("2d")

# 開始畫直線
ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(50, 0)
ctx.lineTo(30, 30)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(50, 0)
ctx.lineTo(70, 30)
ctx.strokeStyle = "#0000ff"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(30,30)
ctx.lineTo(45, 30)
ctx.strokeStyle = "#0000ff"
ctx.stroke() 

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(70,30)
ctx.lineTo(55, 30)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(45,30)
ctx.lineTo(20, 65)
ctx.strokeStyle = "#0000ff"
ctx.stroke() 

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(55,30)
ctx.lineTo(80, 65)
ctx.strokeStyle = "#FF0000"
ctx.stroke() 

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(20,65)
ctx.lineTo(40, 65)
ctx.strokeStyle = "#FF0000"
ctx.stroke() 

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(80,65)
ctx.lineTo(60, 65)
ctx.strokeStyle = "#0000ff"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(40,65)
ctx.lineTo(10, 105)
ctx.strokeStyle = "#0000ff"
ctx.stroke() 

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(60,65)
ctx.lineTo(90, 105)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(10,105)
ctx.lineTo(40, 105)
ctx.strokeStyle = "#FF0000"
ctx.stroke() 

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(90,105)
ctx.lineTo(60, 105)
ctx.strokeStyle = "#0000ff"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(40,105)
ctx.lineTo(40, 135)
ctx.strokeStyle = "#FF0000"
ctx.stroke() 

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(60,105)
ctx.lineTo(60, 135)
ctx.strokeStyle = "#0000ff"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 1
ctx.moveTo(60,135)
ctx.lineTo(40, 135)
ctx.strokeStyle = "#000000"
ctx.stroke()

&lt;/script&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;</summary><category term="w15"></category></entry></feed>